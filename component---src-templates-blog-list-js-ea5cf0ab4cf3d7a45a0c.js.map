{"version":3,"file":"component---src-templates-blog-list-js-ea5cf0ab4cf3d7a45a0c.js","mappings":"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","sources":["webpack://flexible-gatsby/./src/components/seo.js","webpack://flexible-gatsby/./src/templates/blog-list.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport DefaultLayout from '../components/layout'\nimport SEO from '../components/seo'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString()\n    const nextPage = (currentPage + 1).toString()\n\n    return (\n      <DefaultLayout>\n        <SEO\n          title={siteTitle}\n          keywords={[`story`, `children`, `moral`, `moralstories`]}\n        />\n        {posts.map(({ node }) => {\n          return (\n            <article className=\"post\" key={node.fields.slug}>\n              {node.frontmatter.img &&\n                node.frontmatter.img.childImageSharp &&\n                node.frontmatter.img.childImageSharp.fluid && (\n                  <Link\n                    to={node.fields.slug}\n                    className=\"post-thumbnail\"\n                    style={{\n                      backgroundImage: `url(${node.frontmatter.img.childImageSharp.fluid.src})`,\n                    }}\n                  />\n                )}\n              <div className=\"post-content\">\n                <h2 className=\"post-title\">\n                  <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                </h2>\n                <p>{node.frontmatter.description}</p>\n                <span className=\"post-date\">\n                  {node.frontmatter.date}&nbsp;&nbsp;—&nbsp;\n                </span>\n                <span className=\"post-words\">\n                  {node.timeToRead} minute read\n                </span>\n              </div>\n            </article>\n          )\n        })}\n\n        <div className=\"container\">\n          <nav className=\"pagination\" role=\"pagination\">\n            <ul>\n              {!isFirst && (\n                <p>\n                  <Link to={prevPage} rel=\"prev\" className=\"newer-posts\">\n                    ← Previous Page\n                  </Link>\n                </p>\n              )}\n              <p>\n                <span className=\"page-number\">\n                  Page {currentPage} of {numPages}\n                </span>\n              </p>\n              {!isLast && (\n                <p>\n                  <Link to={nextPage} rel=\"next\" className=\"older-posts\">\n                    Next Page →\n                  </Link>\n                </p>\n              )}\n            </ul>\n          </nav>\n        </div>\n      </DefaultLayout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"YYYY, MMM DD\")\n            title\n            description\n            index\n            img {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  aspectRatio\n                  base64\n                  sizes\n                  src\n                  srcSet\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["SEO","_ref","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","React","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","BlogIndex","_React$Component","apply","arguments","_inheritsLoose","prototype","render","data","this","props","siteTitle","posts","allMarkdownRemark","edges","currentPage","numPages","pageContext","isFirst","isLast","prevPage","toString","nextPage","DefaultLayout","keywords","map","node","className","key","fields","slug","frontmatter","img","childImageSharp","fluid","Link","to","style","backgroundImage","src","date","timeToRead","role","rel"],"sourceRoot":""}